//1.arr 배열 크기가 1이라면 리턴 -1
//2.1번이 아니라면 arr을 끝까지 돌면서 가장 작은수 리턴
function solution(arr) {
  if (arr.length == 1) {
    return [-1];
  } else {
    let maxNumber = 999999;
    var answer = [];
    for (let i = 0; i < arr.length; i++) {
      if (arr[i] < maxNumber) {
        maxNumber = arr[i];
      }
    }
    answer = arr.filter((elem) => elem != maxNumber);
  }

  return answer;
}

console.log(solution([4, 3, 2, 1]));

다른풀이1;
function solution(arr) {
  arr.splice(arr.indexOf(Math.min(...arr)), 1);
  if (arr.length < 1) return [-1];
  return arr;
}

다른풀이2;
function solution(arr) {
  const min = Math.min(...arr);
  return arr.length !== 1 ? arr.filter((i) => i !== min) : [-1];
}

다른풀이3;
function solution(arr) {
  if (arr.length === 1) {
    return [-1];
  }
  const minValue = Math.min.apply(null, arr);
  const index = arr.findIndex((value) => value === minValue);
  arr.splice(index, 1);
  return arr;
}

다른풀이4;
function solution(arr) {
  // Array 함수 이용
  var min = arr.reduce((p, c) => Math.min(p, c));
  var r = arr.filter((v) => v != min);
  r = r.length == 0 ? [-1] : r;
  console.log(r);
  return r;
}
